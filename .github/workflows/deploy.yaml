name: Deploy
on:
  push:
    branches:
      - main
jobs:
  deploy:
    env:
      SITE_NAME: dustinruetz.com
    runs-on: ubuntu-latest
    steps:
      - name: 🛒 Git checkout repository
        uses: actions/checkout@v4
      - name: 🟨 Install pnpm
        uses: pnpm/action-setup@v4
      - name: ⬢ Setup Node.js
        uses: actions/setup-node@v4
        with:
          cache: pnpm
          node-version-file: .node-version
      # - Use GitHub Pages to host the site's files by sourcing from the `www` branch.
      # - Adapted from "Using Git Worktree to Deploy GitHub Pages":
      # - https://sangsoonam.github.io/2019/02/08/using-git-worktree-to-deploy-github-pages.html
      - name: 🪪 Git configure identity
        run: |
          git config user.email "deploy-github-action@$SITE_NAME"
          git config user.name "deploy GitHub Action by Dustin Ruetz"
      # Note: If ever the GitHub Actions workflow is broken/erroring/unavailable, the site
      #       can still be deployed by running the individual commands below from the
      #       root of the repo using the terminal on your local machine.
      - name: 🌲 Git checkout orphaned www branch
        run: |
          git checkout --orphan www
          git reset --hard
          git commit --allow-empty -m "feat: initial commit for www branch"
          git checkout main
      # Add `www/` directory to `www` branch.
      - name: 🎄 Create Git worktree
        run: git worktree add ./www/ www
      - name: ⬇️ Install dependencies
        run: pnpm install
      - name: 👀 Audit dependency signatures
        run: npm audit signatures
      - name: 🛠️ Build site
        run: pnpm build
      # There should be no modified files present in the working tree
      # after building the site, so error out if Git finds any.
      - name: 🤨 Error on Git diff
        run: git diff --exit-code
      - name: 🚢 Deploy site
        run: |
          cd ./www/
          git add --all
          git commit -m "deploy: $SITE_NAME on `date +\"%Y-%b-%d at %T UTC\"`"
          git push origin www --force
      # Note: If you're trying to deploy the site from your local machine and you receive a
      #       `fatal: not a git repository` error when running the `remove ./www/` command,
      #       run `cd ./../` first and then try to remove the worktree again after that.
      - name: 🧹 Remove Git worktree
        run: |
          git worktree remove ./www/
          git worktree prune
