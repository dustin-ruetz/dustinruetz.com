@use "../../config/colors.scss";
@use "../../config/spacing.scss";
@use "../../config/z-index.scss";

.home {
  &__hero-title {
    display: flex;
    flex-direction: column;
    margin-bottom: spacing.$s-8;
    color: colors.$white-fff;
    font-size: calc(4rem + 155 * (100vw - 32rem) / 1080);
    font-weight: 900;
    letter-spacing: calc(-0.125rem - 10 * (100vw - 32rem) / 1080);
    line-height: 0.9;

    @media screen and (min-width: 667px) {
      font-size: calc(4rem + 108 * (100vw - 32rem) / 1080);
    }
    @media screen and (min-width: 1400px) {
      font-size: 15.5rem;
      letter-spacing: -1.5rem;
    }
  }

  &__hero-title-line {
    margin: 0.2rem 0;
    position: relative;
  }

  &__hero-title-line-animation {
    @keyframes hero-title-line-animation {
      0% {
        width: 0;
        left: 0;
        opacity: 0;
      }
      50% {
        width: 100%;
        left: 0;
        opacity: 1;
      }
      55% {
        animation-timing-function: cubic-bezier(0.68, -0.55, 0.265, 1.55);
        width: 100%;
        left: auto;
        right: 0;
        opacity: 1;
        transform: translateX(0);
      }
      100% {
        animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.275);
        width: 0;
        left: auto;
        right: 0;
        opacity: 0;
        transform: translateX(20rem);
      }
    }

    animation-duration: 1850ms;
    animation-direction: alternate;
    animation-fill-mode: forwards;
    animation-name: hero-title-line-animation;
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.275);
    height: 100%;
    background-color: colors.$white-fff;
    position: absolute;
    transform: translateX(0);

    @function set-animation-delay($line-number) {
      @return $line-number * 200ms;
    }
    // use class modifiers to specify line numbers because CSS
    // doesn't support *-of-type pseudo-selectors on classes
    &--line-1 {
      animation-delay: set-animation-delay(1);
    }
    &--line-2 {
      animation-delay: set-animation-delay(2);
    }
    &--line-3 {
      animation-delay: set-animation-delay(3);
    }
  }

  &__hero-title-line-content {
    @keyframes hero-title-line-content {
      0% {
        left: 0;
        opacity: 0;
      }
      80% {
        left: 5rem;
        opacity: 0;
      }
      100% {
        animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.275);
        left: 0;
        opacity: 1;
      }
    }

    animation-duration: 1500ms;
    animation-direction: alternate;
    animation-fill-mode: forwards;
    animation-name: hero-title-line-content;
    position: relative;
    opacity: 0;

    @function set-animation-delay($line-number) {
      @return $line-number * 200ms + 100ms;
    }
    // use class modifiers to specify line numbers because CSS
    // doesn't support *-of-type pseudo-selectors on classes
    &--line-1 {
      animation-delay: set-animation-delay(1);
    }
    &--line-2 {
      animation-delay: set-animation-delay(2);
    }
    &--line-3 {
      animation-delay: set-animation-delay(3);
    }
  }

  &__hero-title-character {
    text-shadow: colors.$black-000-with-shadow -2rem 1rem 1rem,
      colors.$black-000-with-shadow 0 2rem 5rem;
  }

  &__hero-asterix {
    @keyframes hero-asterix {
      0% {
        opacity: 0;
      }
      100% {
        opacity: 1;
      }
    }

    // show the hero asterix content after the hero title animations are done
    animation-delay: 2750ms;
    animation-duration: 500ms;
    animation-fill-mode: forwards;
    animation-name: hero-asterix;
    margin-bottom: spacing.$s-4;
    font-size: 1.4rem;
    opacity: 0;

    @media screen and (min-width: 667px) {
      font-size: 1.6rem;
    }
  }

  &__external-links {
    @keyframes external-links {
      0% {
        opacity: 0;
        left: 10vh;
      }
      100% {
        opacity: 1;
        left: 0;
      }
    }
    // show the external links after the hero asterix animation is done
    animation-delay: 3000ms;
    animation-duration: 500ms;
    animation-fill-mode: forwards;
    animation-name: external-links;

    $decorative-line-width: 12.5%;
    padding-left: calc(#{$decorative-line-width} + 1rem);
    margin-bottom: spacing.$s-4;
    opacity: 0;
    position: relative;
    left: 10vh;
    z-index: z-index.$home-external-links;

    .external-links {
      justify-content: start;

      @media screen and (min-width: 1200px) {
        width: 91.7%;
        left: 8.3%;
      }

      // decorative line
      &:before {
        content: '';
        height: 0.1rem;
        width: $decorative-line-width;
        max-width: 21rem;
        padding: 0 spacing.$s-2;
        background-color: colors.$blue;
        position: absolute;
        top: 50%;
        left: 0;
      }
    }
  }

  &__about-me {
    @keyframes about-me {
      0% {
        opacity: 0;
        top: 10vh;
      }
      100% {
        opacity: 1;
        top: 0;
      }
    }

    // show the about me content after the external links animation is done
    animation-delay: 3250ms;
    animation-duration: 500ms;
    animation-fill-mode: forwards;
    animation-name: about-me;
    opacity: 0;
    position: relative;
    top: 10vh;

    @media screen and (min-width: 667px) {
      width: 87.5%;
      left: 12.5%;
    }

    // decorative quotation mark
    &:before {
      content: '‘‘';
      color: #1a1a1a;
      position: absolute;
      z-index: z-index.$home-about-me-quotation-mark;
      transform: translate(-80%, -28%);
      font-size: calc(40rem + 400 * (100vw - 32rem) / 1600);
      letter-spacing: calc(-1.6rem - 44 * (100vw - 32rem) / 1360);
      line-height: 1;
    }
  }

  &__about-me-title,
  &__about-me-paragraph {
    margin-bottom: spacing.$s-4;
  }

  &__about-me-strong-text {
    color: colors.$white-fff;
    font-weight: 700;
  }
}
