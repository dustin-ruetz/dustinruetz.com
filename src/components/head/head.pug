mixin head(params = {})
  -
    const {pageName, pageTitle} = params
    if (typeof pageName !== 'string')
      throw new Error(`+head({pageName}) must be of type string; received ${typeof pageName}.`)
    if (!pageName)
      throw new Error(`+head({pageName}) requires a non-empty string argument; received ${pageName}.`)
    if (typeof pageTitle !== 'string')
      throw new Error(`+head({pageTitle}) must be of type string; received ${typeof pageTitle}.`)
    if (!pageTitle)
      throw new Error(`+head({pageTitle}) requires a non-empty string argument; received ${pageTitle}.`)
  head
    -
      const assets = ['css', 'js'].reduce((assetsObject, filetype) => {
        assetsObject[filetype] = `/${pageName}/${pageName}.${filetype}`
        return assetsObject
      }, {})
    //- refer to PNG rule in Webpack common config for how this path is determined
    link(
      href="/components/head/favicons/favicon-blue-180x180.png"
      rel="icon"
      sizes="180x180"
      type="image/png"
    )
    -
      //- https://developers.google.com/fonts/docs/css2/
      const remoteFonts = {
        baseUrl: 'https://fonts.googleapis.com/css2',
        fonts: {
          droidSerif: 'family=Droid+Serif:wght@400;700',
          roboto: 'family=Roboto:wght@400;700',
        },
        options: {
          display: 'display=swap',
        },
        href: function() {
          return `${this.baseUrl}?${this.fonts.droidSerif}&${this.fonts.roboto}&${this.options.display}`
        }
      }
    link(
      href=remoteFonts.href()
      rel="stylesheet"
    )
    link(
      href=assets.css
      rel="stylesheet"
    )
    meta(charset="utf-8")
    meta(
      content="width=device-width, initial-scale=1.0"
      name="viewport"
    )
    //- https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script/#Attributes
    //- https://flaviocopes.com/javascript-async-defer/
    script(
      defer
      src=assets.js
    )
    -
      const {DOMAIN} = require('../../config/constants.js')
      const isHomepage = pageTitle === DOMAIN
    title= isHomepage ? pageTitle : `${pageTitle} | ${DOMAIN}`
